/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nconst addTxt = document.querySelector(\".todoinput\");\n\nlet todos = JSON.parse(localStorage.getItem(\"todo-list\"));\nlet data = todos.length ? todos : [];\n\n//Add new todos to the list\nfunction addTodos(todo) {\n  todo.preventDefault();\n  let addRoutine = {};\n  addRoutine.routine = addTxt.value;\n  addRoutine.checked = \"\";\n  data.push(addRoutine);\n  addTxt.value = \"\";\n  localStorage.setItem(\"todo-list\", JSON.stringify(data));\n  renderList();\n}\n\naddTxt.addEventListener(\"keyup\", (e) => {\n  if (e.key === \"Enter\") {\n    if (!data) {\n      data = [];\n    }\n    addTodos(e);\n  }\n});\n\nconst list = document.querySelector(\".task-box\");\nconst unfishedNum = document.querySelector(\".unfinished\");\n\nfunction renderList() {\n  let newTodos = \"\";\n  let count = 0;\n  if (data) {\n    data.forEach((item, index) => {\n      newTodos += `\n    <li class=\"task\">\n        <div >\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"${index}\" ${item.checked} >\n            <label for=\"${index}\" data-id=\"${index}\"> ${item.routine}</label>\n        </div>\n        <a href=\"#\" class=\"cross\">\n          <svg\n             xmlns=\"http://www.w3.org/2000/svg\"\n             width=\"18\"\n             height=\"18\"\n             \n             data-num=\"${index}\"\n             data-delete = \"garbageCan\" \n           >\n            <path\n               fill=\"#494C6B\"\n               fill-rule=\"evenodd\"\n               d=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"\n            />\n          </svg>\n        </a>\n    </li>`;\n      if (item.checked === \"\") {\n        count += 1;\n      }\n    });\n  }\n\n  list.innerHTML = newTodos;\n  unfishedNum.textContent = `${count} undone list`;\n}\n\nrenderList();\n\nfunction newRenderList(showData) {\n  let changeTodos = \"\";\n  showData.forEach((item, index) => {\n    changeTodos += `\n  <li class=\"task\">\n      <div>\n          <input type=\"checkbox\" id=\"${index}\" ${item.checked} >\n          <label for=\"${index}\" data-id=\"${index}\">${item.routine}</label>\n      </div>\n      <a href=\"#\" class=\"cross\">\n        <svg\n           xmlns=\"http://www.w3.org/2000/svg\"\n           width=\"18\"\n           height=\"18\"\n           \n           data-delete = \"garbageCan\" \n           data-num=\"${index}\"\n         >\n           <path\n             fill=\"#494C6B\"\n             fill-rule=\"evenodd\"\n             d=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"\n           />\n        </svg>\n      </a>   \n  </li>`;\n  });\n  list.innerHTML = changeTodos;\n}\n\n//Mark todos as complete\nlist.addEventListener(\"click\", (e) => {\n  let num = e.target.getAttribute(\"data-num\");\n  let id = e.target.getAttribute(\"data-id\");\n  let routineId = e.target.getAttribute(\"id\");\n\n  if (e.target.getAttribute(\"data-delete\") == \"garbageCan\") {\n    e.preventDefault();\n    data.splice(num, 1);\n  } else {\n    data.forEach((item, index) => {\n      if (id == index || routineId == index) {\n        if (item.checked === \"checked\") {\n          item.checked = \"\";\n        } else {\n          item.checked = \"checked\";\n        }\n      }\n      //cross.style.visibility = \"visible\";\n    });\n  }\n  localStorage.setItem(\"todo-list\", JSON.stringify(data));\n  renderList();\n});\n\n//Filter by all/active/complete todos\nconst tabMenu = document.querySelector(\".filters\");\nconst filters = document.querySelectorAll(\".filters span\");\n\nfilters.forEach((btn) => {\n  btn.addEventListener(\"click\", () => {\n    document.querySelector(\"span.active\").classList.remove(\"active\");\n    btn.classList.add(\"active\");\n  });\n});\n\ntabMenu.addEventListener(\"click\", (e) => {\n  e.preventDefault();\n  let toggleStatus = e.target.getAttribute(\"data-tab\");\n  let showData = [];\n  if (toggleStatus === \"all\") {\n    renderList();\n  } else if (toggleStatus === \"active\") {\n    showData = data.filter((item) => item.checked === \"\");\n    newRenderList(showData);\n  } else if (toggleStatus === \"completed\") {\n    showData = data.filter((item) => item.checked === \"checked\");\n    newRenderList(showData);\n  }\n});\n\n//Clear all completed todos\nconst deleteAllDone = document.querySelector(\".clear-btn\");\ndeleteAllDone.addEventListener(\"click\", (e) => {\n  e.preventDefault();\n  let deleteData = [];\n  data.forEach((item) => {\n    if (!item.checked) {\n      deleteData.push(item);\n    }\n  });\n  data = deleteData;\n  localStorage.setItem(\"todo-list\", JSON.stringify(data));\n  renderList();\n});\n\n\n//# sourceURL=webpack://landing/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;